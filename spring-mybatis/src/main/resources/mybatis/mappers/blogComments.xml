<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.jhta.dao.BlogCommentDao">
	<insert id="insertComment" parameterType="Comment">
		insert into spring_blog_comments
		(comment_no, comment_writer, comment_content, blog_no)
		values
		(spring_comment_seq.nextval, #{writer},#{content},#{blogNo})
	</insert>
	
	<select id="getCommentByBlogNo" parameterType="int" resultType="Comment">
		select
			a.comment_no 				as no,
			a.comment_writer 			as writer.id,
			c.user_name					as writer.name,
			c.user_email				as writer.email,
			a.comment_content 			as content,
			b.blog_no 					as blog.no,
			b.blog_title				as blog.title,
			b.blog_content				as blog.content,
			b.blog_comment_counts		as blog.commentCounts,
			a.comment_create_date 		as createDate
		from spring_blog_comments A, spring_blogs B, spring_users C
		where a.blog_no = b.blog_no
		and a.comment_writer = c.user_id 
		and comment_no = #{value}
	</select>
	
	<select id="getCommentByWriter" parameterType="string" resultType="Comment">
		select
			a.comment_no 				as no,
			c.user_id 					as writer.id,
			c.user_name					as writer.name,
			c.user_email				as writer.email,
			a.comment_content 			as content,
			b.blog_no 					as blog.no,
			b.blog_title				as blog.title,
			b.blog_content				as blog.content,
			b.blog_comment_counts		as blog.commentCounts,
			a.comment_create_date 		as createDate
		from spring_blog_comments A, spring_blogs B, spring_users C
		where a.blog_no = b.blog_no
		and a.comment_writer = c.user_id 
		and comment_writer = #{value}
	</select>
	
	<delete id=deleteComment parameterType="int">
		delete from spring_blog_comments
		where comment_no = #{value}
	</delete>
</mapper>